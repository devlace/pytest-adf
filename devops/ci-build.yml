trigger:
    branches:
      include:
      - master
      - release/*

pr: none

variables:
  pythonPackageMajorVersion:  1
  pythonPackageMinorVersion:  1
  pythonPackagePatchVersion:  $(Build.BuildId)
  pythonPackageName: pytest-adf
  pythonVersion: 3.8

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
  - job: 'build_and_publish_python_packages'
    displayName: 'Build and Publish Python Packages'
    variables:
      pythonPackageWorkingDir: '.'
      azureArtifactsProjectName: pytest-adf
      azureArtifactsFeedName: pytest-adf-feed
    pool:
      vmImage: 'Ubuntu-18.04'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        addToPath: true
        architecture: 'x64'
      displayName: 'Use Python Version: $(pythonVersion)'

    - script: pip install -r requirements_dev.txt && pip install -r requirements.txt
      workingDirectory: $(pythonPackageWorkingDir)
      displayName: 'Install requirements'

    - script: make dist
      env:
        PACKAGE_VERSION: $(pythonPackageMajorVersion).$(pythonPackageMinorVersion).$(pythonPackagePatchVersion)
      workingDirectory: $(pythonPackageWorkingDir)
      displayName: 'Create wheel package'

    - task: PublishPipelineArtifact@1
      displayName: 'Build and Publish Python Dist Artifacts'
      inputs:
        targetPath: '$(pythonPackageWorkingDir)/dist'
        artifact: 'dist'
        publishLocation: 'pipeline'

    # - task: TwineAuthenticate@0
    #   inputs:
    #     artifactFeeds: '$(azureArtifactsProjectName)/$(azureArtifactsFeedName)'
    #   displayName: 'Authenticate to Azure Artifacts'

    # - script: 'twine upload -r $(azureArtifactsProjectName)/$(azureArtifactsFeedName) --config-file $(PYPIRC_PATH) $(pythonPackageWorkingDir)/dist/*'
    #   displayName: 'Upload to Azure Artifacts'

# - stage: deploy_to_pypi
#   displayName: 'Deploy to PYPI'
#   jobs:
#   - deployment: deploy_to_pypi
#     displayName: 'Deploy to PYPI'
#     pool:
#       vmImage: 'Ubuntu-18.04'
    
#     environment: 'DEV'
#     strategy:
#     runOnce:
#       deploy:
#         steps:
        